<html>
<head>
    <!-- Hackers wanna hack -->
    <!-- What would Mr. Robots do -->
    <!-- Hackers gonna hack -->
    <meta name='viewport' content='width=device-width,initial-scale=1'>
    <style>
        body {
            background-color: #252525;
            border-color: #454545;
            color: #fff;
            text-shadow: 0 1px 0 #111
        }
        textarea {
            padding: .4em;
            line-height: 1.4em;
            width: 100%;
            height: 350px;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            background-color: #2a2a2a;
            border-color: #1d1d1d;
            color: #fff;
            overflow: hidden;
        }
        button {
            background-color: #6B6B6B;
            border-color: #1f1f1f;
            color: #fff;
            text-shadow: 0 1px 0 #111;
            -webkit-box-sizing: border-box;
            -moz-box-sizing: border-box;
            box-sizing: border-box;
            -webkit-appearance: none;
            -moz-appearance: none;
            width: 100%;
            margin: .5em 0;
            padding: .7em 1em;
            font-weight: bold;
            border-width: 1px;
            border-style: solid
        }
        body,
        textarea,
        button {
            font-size: 1em;
            line-height: 1.3;
            font-family: sans-serif
        }
        .ui-corner-all {
            -webkit-border-radius: .3125em;
            border-radius: .3125em
        }
        #l {
            padding: 10;
            max-width: 800px;
            margin: 0 auto;
        }
        #b,
        #m {
            display: none
        }
        #bg {
            position: fixed;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%
        }
        #bg img {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            margin: auto;
            min-width: 50%;
            min-height: 50%
        }
        #m span {
            position: fixed;
            right: 5px;
            bottom: 10px;

            font-family: sans-serif;
            color: white;
            text-shadow: 4px 4px 2px rgba(150, 150, 150, 1)
        }
        #msg {
            cursor: pointer;
            text-decoration: underline;
            text-align: right;
        }
        #info {
            display: none;
            background: darkgray;
            opacity: .85;
            padding: 5px;
            margin-left: 5px;
        }
    </style>
</head>
<body onload="trigger()">
<pre id="descramble"></pre>
<script type="text/javascript">
// Descramble JavaScript was written by @archwisp
// Next time you see him, tell him that this is DOPEaf
// and he is dopeAF
var Descramble =
{
    timer: null,
    iterations: 0,
    min_iter: 10,
    max_iter: 100,
    delay: 100,
    init: function() {
        text = [];
        text.push('                         `:oddo:`                     sh-3.2# Activating Node: ...Complete');
        text.push('                      ./ymMMMMMMmy/.                  sh-3.2# Joining Hacker Hive: ...Complete');
        text.push('                   -+dNMMMMMMMMMMMMNd+-                                ');
        text.push('               `:smNMMMMMMMMMMMMMMMMMMNms:`                            ');
        text.push('            -+hmMMMMMMMMMMMMMMMMMMMMMMMMMMmh+-                         ');
        text.push('        `:odNMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNdo:`                     ');
        text.push('     ./ymNMMMMMMMMMMdyssoooydmMMMMMMMMMMMMMMMMMMNmy/.                  ');
        text.push('  -+hNMMMMMMMMMMMMMd`       `.-://///+hMMMMMMMMMMMMMNh+-               ');
        text.push(' -NMMMMMMMMMMMMMMMM-                  `hMMMMMMMMMMMMMMMN-              ');
        text.push(' :MMMMMMMMMMMMMMMMs                    :MMMMMMMMMMMMMMMM:              ');
        text.push(' :MMMMMMMMMMMMMMMm`                     NMMMMMMM/  `.--..   `.........      `..--.`   `...`    ....     `..--.`    ');
        text.push(' :MMMMMMMMMMMMMMM:                      yMMMMMMM .sdmNNNmh/ :mmmmmmmmm.   -sdmNNNNmh+`:mmm/   ommm+  `:ydmNNNmdy/  ');
        text.push(' :MMMMMMMMMNNmmmo                       :MMMMMMM.mMMNyydmN: /MMMdyyyyy` `yNMMmhyydmMh`/MMM+  oMMN+  -hMMMmhyydNMs  ');
        text.push(' :MMMMMMMMN/:-.`                        `NMMMMMM-MMMd-.`.-  /MMMo...`   hMMMo`    .:` /MMMo.sMMN/  `mMMN/`    .:   ');
        text.push(' :MMMMMMMMMmmdhh/                        sNNMMMM +mMMMmds:` /MMMNmmmm  .MMMh          /MMMNNMMM/   /MMMo           ');
        text.push(' :MMMMMMMMMMMMMMo                        `.:/shN  `:ohmMMMh`/MMMdyyyy  .MMMm`         /MMMdyNMMh`  /MMMy           ');
        text.push(' :MMMMMMMMMMMMMMd                       /dhhysos .s:``.hMMM-/MMM+`````  sMMMh:````:y+`/MMM+ :NMMd. `dMMMy-```./y:  ');
        text.push(' :MMMMMMMMMyomMMN.                      dMMMMMMM-mMMNmmMMMh`/MMMNmmmmm/  oNMMMNmmNMMN+/MMM+  :NMMm. `sNMMMmmmNMMN: ');
        text.push(' :MMMMMMMMM-  -s:                       /MMMMMMM`:ohdmmdy/  :hhhhhhhhh:   `/shmmmdy+- -hhh:   -hhhs`  .+ydmmmdy/.  ');
        text.push(' :MMMMMMMMh                              dMMMMMMMMMMMMMM:             ');
        text.push(' :MMMMMMd:                            /shMMMMMMMMMMMMMMM:         The largest monthly infosec conference in');
        text.push(' :MMMMd:                             `dMMMMMMMMMMMMMMMMM:         the world. Second Tuesday of every month');
        text.push(' :MMd:                               sMMMMMMMMMMMMMMMMMM:         right here in KC. Info @ http://seckc.org');
        text.push('  /-                        /yo-    .MMMMMMMMMMMMMMMMMMM:              ');
        text.push('                            `:yNNhydNMMMMMMMMMMMMMMMMmy/               ');
        text.push('                            ```-omMMMMMMMMMMMMMMMMdo-`                 ');
        text.push('                          .dNNNNNMMMMMMMMMMMMMNh+.`                    ');
        text.push('                         `mMMMMMMMMMMMMMMMMds:`      The SecKC Motto:      ');
        text.push('                          +MMMMMMMMMMMMNho-`         Destroy no data,      ');
        text.push('                           hMMMMMMMMmy/.`            maintain no persistence;');
        text.push('                           .NMMMNds:`                above all else, do no harm');
        text.push('                            +dh+-`                                     ');
        text.push('                             `                                         ');
        solved = [];
        this.timer = setInterval(solved = this.writeAll.bind(this, text, solved), this.delay);
    },


    writeAll: function(text) {
        pos = 0;
        output = [];

        while (pos < text.length) {

            if (typeof(solved[pos]) !== "undefined") {
                output[pos] = text[pos];
            } else {
                roll = Math.floor(Math.random() * 10);

                if (roll === 0 && this.iterations > this.min_iter) {
                    solved[pos] = true;
                } else {
                    shuffled = this.shuffle(text[pos].split("")).join("");
                    output[pos] = shuffled;
                }
            }

            this.write(output.join("\n"));
            pos++;
        }

        this.iterations++;

        if (this.iterations > this.max_iter) {
            clearInterval(this.timer);
        }

        return solved;
    },

    write: function(out) {
        document.getElementById("descramble").innerHTML = out;
    },

    shuffle: function(array) {
        var currentIndex = array.length, temporaryValue, randomIndex;
        while (0 !== currentIndex) {
            randomIndex = Math.floor(Math.random() * currentIndex);
            currentIndex -= 1;
            temporaryValue = array[currentIndex];
            array[currentIndex] = array[randomIndex];
            array[randomIndex] = temporaryValue;
        }
        return array;
    }
}

Descramble.init();
</script>
Can you find the embedded hacking challenge?
    <script>
        var a = document.getElementById("a");
        var m = document.getElementById("m");
        var l = document.getElementById("l");
        var b = document.getElementById("b");
        var d = document.getElementById("d");
        b.addEventListener("click", function() {
            trigger();
        }, false);
        function show() {
            b.style.display = "block";
            d.style.display = "none";
            message();
        }
        var msg = document.getElementById("msg");
        msg.addEventListener("click", function() {
            this.style.display = "none";
            info();
        }, false);
        function message()
        {
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.onreadystatechange = function() {
                if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                {
                    console.log('Message: ' + xmlHttp.responseText);
                    document.getElementById("msg").innerHTML = xmlHttp.responseText;
                }
            };
            xmlHttp.open("GET", "/message.htm", true); // true for asynchronous
            xmlHttp.send(null);
        }
        function info()
        {
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.onreadystatechange = function() {
                if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                {
                    console.log('Message: ' + xmlHttp.responseText);
                    var i = document.getElementById("info");
                    i.innerHTML = xmlHttp.responseText;
                    i.style.display = "block";
                }
            };
            xmlHttp.open("GET", "/info.htm", true); // true for asynchronous
            xmlHttp.send(null);
        }
        function trigger()
        {
            var xmlHttp = new XMLHttpRequest();
            xmlHttp.onreadystatechange = function() {
                if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                {
                    console.log('Trigger: ' + xmlHttp.responseText);
                }
            };
            xmlHttp.open("GET", "/trigger", true); // true for asynchronous
            xmlHttp.send(null);
        }
    </script>
</html>
